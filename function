from statistics import mean
import numpy as np
import matplotlib.pyplot as plt
from matplotlib import style

style.use('fivethirtyeight')

xs = np.array([1,2,3,4,5,6], dtype = np.float64)
ys = np.array([5,4,6,5,6,7], dtype = np.float64)

def best_fit_slope(xs,ys):
    a = ((mean(xs)*mean(ys) - mean(xs*ys))/
          (mean(xs)**2 - mean(xs**2)))
    b = mean(ys) - a*mean(xs)
    return a , b

def suqare_error(ys_orig, ys_line):
    return sum((ys_line-ys_orig)**2)

def coeff_of_determination(ys_orig, ys_line):
    y_mean_line = [mean(ys_orig) for y in ys_orig]
    square_error_regr = suqare_error(ys_orig, ys_line)
    square_error_y_mean = suqare_error(ys_orig, y_mean_line)
    return 1 - (square_error_regr/square_error_y_mean)
    


m,b = best_fit_slope(xs, ys)

regression_line = [(m*x) + b for x in xs]


r_squared = coeff_of_determination(ys, regression_line)

print(r_squared)
plt.scatter(xs,ys)
plt.plot(xs, regression_line)

plt.show()



